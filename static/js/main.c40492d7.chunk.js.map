{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["SearchBy","TodoList","todos","selectedTodo","setSelectedTodo","className","map","todo","id","completed","title","classNames","type","onClick","TodoFilter","searchBy","setSearchBy","setQuery","query","value","onChange","event","target","all","active","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","userId","useEffect","getUser","href","email","name","App","initialTodos","setInitialTodos","error","setError","todosLoading","setTodosLoading","fetchGoods","catch","filteredTodos","useMemo","filterBy","findTodos","searchQuery","toLowerCase","trim","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c40492d7.chunk.js","sourcesContent":["type Props = {\n  searchBy: SearchBy,\n  setSearchBy: (type: SearchBy) => void\n  setQuery: (query: string) => void\n  query: string\n};\n\nexport enum SearchBy {\n  all = 'all',\n  active = 'active',\n  completed = 'completed',\n}\n\nexport const TodoFilter: React.FC<Props> = ({\n  searchBy,\n  setSearchBy,\n  setQuery,\n  query,\n}) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={searchBy}\n          onChange={(event) => setSearchBy(event.target.value as SearchBy)}\n        >\n          <option value={SearchBy.all}>All</option>\n          <option value={SearchBy.active}>Active</option>\n          <option value={SearchBy.completed}>Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={query}\n        onChange={event => setQuery(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n        {query.length && (\n          // eslint-disable-next-line jsx-a11y/control-has-associated-label\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setQuery('')}\n          />\n        )}\n      </span>\n    </p>\n  </form>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  setSelectedTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, completed, title } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span\n                  className=\"icon\"\n                  data-cy=\"iconCompleted\"\n                >\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': completed,\n                'has-text-danger': !completed,\n              })}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => setSelectedTodo(todo)}\n              >\n                <span className=\"icon\">\n                  <i\n                    className={classNames(\n                      'far',\n                      selectedTodo?.id === todo.id ? 'fa-eye-slash' : 'fa-eye',\n                    )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\n\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  selectedTodo: Todo,\n  setSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  setSelectedTodo,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId).then(setUser);\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => setSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useState, useEffect, useMemo } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { SearchBy, TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [initialTodos, setInitialTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [searchBy, setSearchBy] = useState<SearchBy>(SearchBy.all);\n  const [query, setQuery] = useState('');\n  const [error, setError] = useState(false);\n  const [todosLoading, setTodosLoading] = useState(true);\n\n  const filter = (\n    todos: Todo[],\n    filterBy: SearchBy,\n  ) => {\n    let findTodos = [...todos];\n\n    if (query) {\n      const searchQuery = query.toLowerCase().trim();\n\n      findTodos = findTodos.filter((todo) => todo.title.toLowerCase().includes(searchQuery));\n    }\n\n    findTodos = findTodos.filter(todo => {\n      switch (filterBy) {\n        case SearchBy.active:\n          return !todo.completed;\n        case SearchBy.completed:\n          return todo.completed;\n        case SearchBy.all:\n        default:\n          return todo;\n      }\n    });\n\n    return findTodos;\n  };\n\n  const fetchGoods = () => (\n    getTodos()\n      .then((todo) => {\n        setInitialTodos(todo);\n        setTodosLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n        setTodosLoading(false);\n      }));\n\n  useEffect(() => {\n    fetchGoods();\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return filter(initialTodos, searchBy);\n  }, [searchBy, initialTodos, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                searchBy={searchBy}\n                setSearchBy={setSearchBy}\n                setQuery={setQuery}\n                query={query}\n              />\n            </div>\n\n            {todosLoading && <Loader />}\n\n            {error ? (\n              <p className=\"has-text-danger\">\n                An error occured when loading todos\n              </p>\n            ) : (\n              <div className=\"block\">\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  setSelectedTodo={setSelectedTodo}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}